{"version":3,"sources":["webpack:///0.js","webpack:///./assets/js/sw.js"],"names":["webpackJsonp","75","module","exports","__webpack_require__","navigator","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","error","catch","e"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAASC,GAEjC,YCHAC,WAAUC,cAAcC,SAAY,eAAmBC,KAAK,SAACC,GAG3DA,EAAIC,cAAgB,WAGlB,GAAMC,GAAmBF,EAAIG,UAE7BD,GAAiBE,cAAgB,WAC/B,OAAQF,EAAiBG,OACvB,IAAK,YACCT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,wCAIZD,QAAQC,IAAI,oCAEd,MAEF,KAAK,YACHD,QAAQE,MAAM,kDACd,MACF,SACEF,QAAQC,IAAI,kBAAmBN,EAAiBG,YAIvDK,MAAM,SAACC,GACRJ,QAAQE,MAAM,4CAA6CE","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/* globals navigator */\n\nnavigator.serviceWorker.register(\"/2017\" + '/sw.js').then(function (reg) {\n  // updatefound is fired if service-worker.js changes.\n  // eslint-disable-next-line\n  reg.onupdatefound = function () {\n    // The updatefound event implies that reg.installing is set; see\n    // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n    var installingWorker = reg.installing;\n\n    installingWorker.onstatechange = function () {\n      switch (installingWorker.state) {\n        case 'installed':\n          if (navigator.serviceWorker.controller) {\n            // At this point, the old content will have been purged and the fresh content will\n            // have been added to the cache.\n            // It's the perfect time to display a \"New content is available; please refresh.\"\n            // message in the page's interface.\n            console.log('New or updated content is available.');\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a \"Content is cached for offline use.\" message.\n            console.log('Content is now available offline!');\n          }\n          break;\n\n        case 'redundant':\n          console.error('The installing service worker became redundant.');\n          break;\n        default:\n          console.log('Current state: ', installingWorker.state);\n      }\n    };\n  };\n}).catch(function (e) {\n  console.error('Error during service worker registration:', e);\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","/* globals navigator */\n\nnavigator.serviceWorker.register(`${BASE_PATH}/sw.js`).then((reg) => {\n  // updatefound is fired if service-worker.js changes.\n  // eslint-disable-next-line\n  reg.onupdatefound = () => {\n    // The updatefound event implies that reg.installing is set; see\n    // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n    const installingWorker = reg.installing;\n\n    installingWorker.onstatechange = () => {\n      switch (installingWorker.state) {\n        case 'installed':\n          if (navigator.serviceWorker.controller) {\n            // At this point, the old content will have been purged and the fresh content will\n            // have been added to the cache.\n            // It's the perfect time to display a \"New content is available; please refresh.\"\n            // message in the page's interface.\n            console.log('New or updated content is available.');\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a \"Content is cached for offline use.\" message.\n            console.log('Content is now available offline!');\n          }\n          break;\n\n        case 'redundant':\n          console.error('The installing service worker became redundant.');\n          break;\n        default:\n          console.log('Current state: ', installingWorker.state);\n      }\n    };\n  };\n}).catch((e) => {\n  console.error('Error during service worker registration:', e);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/sw.js"],"sourceRoot":""}